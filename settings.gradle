include ':shell'
//框架 isupplant-shell
//作业票 isupplant-wts
//安环 isupplant-ses-other
//隐患 isupplant-ses
//设备 isupplant-eam
//巡检 isupplant-patrol
//仓库 isupplant-wms
//工单 isupplant-wom
//造纸 isupplant-paper
//实验室 isupplant-lims
//连续生产 isupplant-psc


includeModules()


def includeModules() {

    boolean isPatchMode =  "true".equals(IS_PATCH_MODE.trim())
    println("IS_PATCH_MODE:"+isPatchMode)
    String[] folders = null
    if( isPatchMode){
        folders = ["isupplant-shell"/*, "isupplant-wts", "isupplant-paper", "isupplant-eam",
                   "isupplant-patrol", "isupplant-wms", "isupplant-wom", "isupplant-lims", "isupplant-psc" ,
                   "isupplant-ses", "isupplant-ses-other"*/]
    }
    else{
        folders = ["isupplant-shell", "isupplant-wts", "isupplant-paper", "isupplant-eam",
                   "isupplant-patrol", "isupplant-wms", "isupplant-wom", "isupplant-lims", "isupplant-psc" ,
                   "isupplant-ses", "isupplant-ses-other"]
    }

    Set<String> ignoreFolders = new HashSet<>()
    ignoreFolders.add(".git")
    ignoreFolders.add("libs")
    ignoreFolders.add("build")
    ignoreFolders.add("module_ble")
    ignoreFolders.add("module_wom_ble")
    //在这里添加要过滤的文件夹

    List<String> modules = new ArrayList<>()
    for(String folder:folders){
        modules.addAll(getIncludeFiles(folder, ignoreFolders))
    }
    for(String module : modules){
        include module
    }
}

def getIncludeFiles(gitFolderPath, ignoreFolders) {
    File folder = new File(gitFolderPath)
    List<String> modules = new ArrayList<>()
    if (folder.exists()) {
        File[] fileList = folder.listFiles()
        if (fileList != null && fileList.size() > 0) {
            for (File file:fileList) {
                if (file.isDirectory() && !ignoreFolders.contains(file.name)){
                    modules.add(':'+gitFolderPath+':' + file.name)
                }
            }

        }
    }
    return modules;

}