

apply plugin: 'com.android.application'
if(rootProject.ext.isPatchMode){
    apply plugin: 'com.supcon.plugin.host'
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        flavorDimensions("dev")

        ndk{
            abiFilters "armeabi-v7a", "x86", "armeabi" ,"aarch64"
        }
    }

    productFlavors {
        dev {
            applicationId 'com.supcon.supplant'
            manifestPlaceholders = [CHANNEL_VALUE : name,
                                    APP_NAME            : "@string/application_name",
                                    APP_ICON            : "@mipmap/ic_launcher",
                                    APP_ROUND_ICON      : "@drawable/ic_app_launcher_round",
                                    APP_SHARE_ID        : "com.supcon.supplant",
                                    XG_ACCESS_ID : "2100348528",
                                    XG_ACCESS_KEY: "A992GPQ3MU2H",
                                    HW_APPID: "101399227",
                                    PACKAGE_NAME:"com.supcon.supplant",
                                    IS_PATCH_MODE:rootProject.ext.isPatchMode
            ]
        }
        mobileTest {
            applicationId 'com.supcon.supplant'
            manifestPlaceholders = [CHANNEL_VALUE : name,
                                    APP_NAME            : "@string/application_name",
                                    APP_ICON            : "@mipmap/ic_launcher",
                                    APP_ROUND_ICON      : "@drawable/ic_app_launcher_round",
                                    APP_SHARE_ID        : "com.supcon.supplant",
                                    XG_ACCESS_ID : "2100348528",
                                    XG_ACCESS_KEY: "A992GPQ3MU2H",
                                    HW_APPID: "101399227",
                                    PACKAGE_NAME:"com.supcon.supplant",
                                    IS_PATCH_MODE:rootProject.ext.isPatchMode
            ]
        }
        official {
            applicationId "com.supcon.supplant"
            manifestPlaceholders = [CHANNEL_VALUE : name,
                                    APP_NAME            : "@string/application_name",
                                    APP_ICON            : "@mipmap/ic_launcher",
                                    APP_ROUND_ICON      : "@drawable/ic_app_launcher_round",
                                    APP_SHARE_ID        : "com.supcon.supplant",
                                    XG_ACCESS_ID : "2100348528",
                                    XG_ACCESS_KEY: "A992GPQ3MU2H",
                                    HW_APPID: "101399227",
                                    PACKAGE_NAME:"com.supcon.supplant",
                                    IS_PATCH_MODE:rootProject.ext.isPatchMode
            ]
        }
    }

    signingConfigs {
        keystore {
            storePassword '123456'
            keyAlias 'mobile'
            keyPassword '654321'
            storeFile file('./mobile.jks')

        }
    }

    buildTypes {

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"

            minifyEnabled false
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.keystore
            applicationVariants.all { variant ->
                variant.outputs.all {
//                    outputFileName = "SupPlant-isupPlant V${rootProject.ext.ProductCode}-${releaseTime()}-C.apk"
                    outputFileName = "isupPlant ${rootProject.ext.ProductCode}.apk"
                }
            }

            //是否进行zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
        }
        debug {

            buildConfigField "boolean", "LOG_DEBUG", "true"
            multiDexEnabled true
        }
    }

    //支持Java8
    defaultConfig.javaCompileOptions {
        annotationProcessorOptions {
            includeCompileClasspath = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

//    configurations.all {
//        resolutionStrategy.force 'com.google.code.gson:gson:2.8.2'
//    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:2.0.0-beta1'
    testImplementation 'junit:junit:4.13-beta-3'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    List<String> modules = new ArrayList<>()
    String[] folders = null
    println("isPatchMode: "+rootProject.ext.isPatchMode)
    if (rootProject.ext.isPatchMode) {
        //Do things while compile mode is Alone-Mode
        folders = ["isupplant-shell"/*, "isupplant-wts", "isupplant-paper", "isupplant-eam",
                   "isupplant-patrol", "isupplant-wms", "isupplant-wom", "isupplant-lims", "isupplant-psc" ,
                   "isupplant-ses", "isupplant-ses-other"*/]

    } else {
//        implementation project(':isupplant-patrol:module_xj')
//        implementation project(':isupplant-patrol:module_xj_temp')
//        implementation project(':isupplant-wts:module_wts')
//        implementation project(':isupplant-ses-other:module_unsafe')
//        implementation project(':isupplant-ses:module_hazardmanager')
//        implementation project(':isupplant-ses-other:module_emergencymanager')
//        implementation project(':isupplant-ses-other:module_drillplan')
//        implementation project(':isupplant-ses-other:module_safetycheck')
//
//        implementation project(':isupplant-wom:module_wom_batchmaterial')
//        implementation project(':isupplant-wom:module_wom_preparematerial')
//        implementation project(':isupplant-wom:module_wom_producetask')
//        implementation project(':isupplant-wom:module_wom_rejectmaterial')
//        implementation project(':isupplant-wom:module_wom_pending')
//        implementation project(':isupplant-eam:module_sbda')
//        implementation project(':isupplant-eam:module_wxgd')
//        implementation project(':isupplant-eam:module_spare')
//        implementation project(':isupplant-eam:module_pd')
//        implementation project(':isupplant-eam:module_yxjl')
//        implementation project(':isupplant-eam:module_warning')
//        implementation project(':isupplant-eam:module_tsd')
//        implementation project(':isupplant-wms:module_wms')
//        implementation project(':isupplant-wms:module_wms_cgrk')
//        implementation project(':isupplant-wms:module_wms_produce')
//        implementation project(':isupplant-wms:module_wms_other')
//        implementation project(':isupplant-wms:module_wms_sale')
//        implementation project(':isupplant-wms:module_wms_hwtz')
//        implementation project(':isupplant-wms:module_wms_wlcx')
//        implementation project(':isupplant-wms:module_wms_pk')
//
//        implementation project(':isupplant-lims:module_lims')
//        implementation project(':isupplant-lims:module_product')
//        implementation project(':isupplant-lims:module_incoming')
//        implementation project(':isupplant-lims:module_other')
//        implementation project(':isupplant-lims:module_sample')
//        implementation project(':isupplant-lims:module_retention')
//        implementation project(':isupplant-psc:module_task')

        folders = ["isupplant-shell", "isupplant-wts", "isupplant-paper", "isupplant-eam",
                   "isupplant-patrol", "isupplant-wms", "isupplant-wom", "isupplant-lims", "isupplant-psc" ,
                   "isupplant-ses", "isupplant-ses-other"]
    }
//    implementation project(':isupplant-shell:module_login')
//    implementation project(':isupplant-shell:module_contact')
//    implementation project(':isupplant-shell:home')
//    implementation project(':isupplant-shell:module_webview')
//    implementation project(':isupplant-shell:module_map')
//    implementation project(':isupplant-shell:middleware')
//    implementation project(':isupplant-shell:module_data_manage')
//    implementation project(':isupplant-shell:module_push')
//    implementation project(':isupplant-shell:module_scan')
//    implementation project(':isupplant-shell:module_search')
//    implementation project(':isupplant-shell:module_iweb_flowchart')
//    implementation project(':isupplant-shell:module_base')
//    implementation project(':isupplant-shell:module_comprehensive')
//    implementation project(':isupplant-shell:module_livevideo')

    modules.addAll(includeModules(folders))
    for(String module:modules){
        implementation project(module)
        println("implementation "+module)
    }

}


def includeModules(folders) {


    Set<String> ignoreFolders = new HashSet<>()
    ignoreFolders.add(".git")
    ignoreFolders.add("libs")
    ignoreFolders.add("build")
    ignoreFolders.add("module_ble")
    ignoreFolders.add("module_wom_ble")
    //在这里添加要过滤的文件夹

    List<String> modules = new ArrayList<>()
    for(String folder:folders){
        println("folder:"+folder)
        modules.addAll(getImplFiles(folder, ignoreFolders))
    }
    return modules;
}

def getImplFiles(gitFilePath, ignoreFolders) {
    println("gitFilePath:"+gitFilePath)
    File folder = new File(gitFilePath)
    List<String> modules = new ArrayList<>()
    if (folder.exists()) {
        File[] fileList = folder.listFiles()
        if (fileList != null && fileList.size() > 0) {
            for (File file:fileList) {
                if (file.isDirectory() && !(ignoreFolders.contains(file.name) || file.name.contains("plugin"))){
                    modules.add(':'+gitFilePath+':' + file.name)
                }
            }

        }
    }
    return modules;

}

import java.text.SimpleDateFormat
//static def releaseTime() {
//    return new SimpleDateFormat("yyyyMMdd_HH_mm").format(new Date(System.currentTimeMillis()))
//}
